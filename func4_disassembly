   0x0000000000400fce <+0>:	sub    $0x8,%rsp  
   0x0000000000400fd2 <+4>:	mov    %edx,%eax  # eax = 14
   0x0000000000400fd4 <+6>:	sub    %esi,%eax  # eax = eax - 0
   0x0000000000400fd6 <+8>:	mov    %eax,%ecx  # ecx = 14
   0x0000000000400fd8 <+10>:	shr    $0x1f,%ecx  # ecx >> 31 == 0
   0x0000000000400fdb <+13>:	add    %ecx,%eax   # eax = 14 + 0
   0x0000000000400fdd <+15>:	sar    %eax        # eax = 7
   0x0000000000400fdf <+17>:	lea    (%rax,%rsi,1),%ecx # ecx = 7
   0x0000000000400fe2 <+20>:	cmp    %edi,%ecx   # cmp edi : ecx
   0x0000000000400fe4 <+22>:	jle    0x400ff2 <func4+36> # ecx <= 7(edi)
   0x0000000000400fe6 <+24>:	lea    -0x1(%rcx),%edx    # edx = 14 - 1 
   0x0000000000400fe9 <+27>:	callq  0x400fce <func4>  #  
   0x0000000000400fee <+32>:	add    %eax,%eax
   0x0000000000400ff0 <+34>:	jmp    0x401007 <func4+57>
   0x0000000000400ff2 <+36>:	mov    $0x0,%eax   # eax = 0
   0x0000000000400ff7 <+41>:	cmp    %edi,%ecx   # cmp 7 : 7
   0x0000000000400ff9 <+43>:	jge    0x401007 <func4+57>  # if  >= goto 1007
   0x0000000000400ffb <+45>:	lea    0x1(%rcx),%esi
   0x0000000000400ffe <+48>:	callq  0x400fce <func4>
   0x0000000000401003 <+53>:	lea    0x1(%rax,%rax,1),%eax
   0x0000000000401007 <+57>:	add    $0x8,%rsp
--Type <RET> for more, q to quit, c to continue without paging--
   0x000000000040100b <+61>:	retq 
